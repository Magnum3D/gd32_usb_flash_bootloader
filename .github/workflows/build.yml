name: Build BootLoader

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: "Deploying app..."
    steps:
    - name: Test Echo
      run: echo ${GITHUB_REPOSITORY#*/}
    - name: Checkout source code
      uses: actions/checkout@v3
    - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
      uses: carlosperate/arm-none-eabi-gcc-action@v1
    - name: make
      run: make
    - uses: actions/upload-artifact@v2
      with:
        name: gd32_usb_flash_bootloader.bin
        path: ./build/gd32_usb_flash_bootloader.bin
    - name: Get current date
      id: date
      run: |
        echo "::set-output name=date::$(date +'%Y-%m-%d')"
        echo "::set-output name=datetime::$(date +'%Y-%m-%d %H:%M:%S')"
        echo "::set-output name=tag::$(date +'%Y-%m-%d-%H%M%S')"
      env:
        TZ: Europe/Moscow
    - name: Changelog
      run: |
        date +'%Y-%m-%d %H:%M:%S' > CHANGELOG.md
        git log --oneline --decorate -n 10 >> CHANGELOG.md
      env:
        TZ: Europe/Moscow
    - name: release
      uses: ncipollo/release-action@v1.8.10
      id: create_release
      with:
        draft: false
        prerelease: false
        removeArtifacts: true
        allowUpdates: true
        replacesArtifacts: true
        name: Release v${{ steps.date.outputs.date }}
        tag: v${{ steps.date.outputs.tag }}
        bodyFile: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/gd32_usb_flash_bootloader.bin
        asset_name: MagnumDF-${{ steps.date.outputs.date }}.bin
        asset_content_type: application/octet-stream
